# -*- Tcl -*-

package require tcltest 2.2
namespace import -force ::tcltest::*

::tcltest::configure {*}$argv

if {[ns_config test listenport]} {
    testConstraint serverListen true
}

test ns_writer-1.1 {basic syntax: plain call} -body {
     ns_writer
} -returnCodes error -result {wrong # args: should be "ns_writer command ?args?"}

test ns_writer-1.2 {basic syntax: wrong argument} -body {
     ns_writer ?
} -returnCodes error -result {bad subcmd "?": must be list, size, streaming, submit, or submitfile}

test ns_writer-1.3 {basic operation} -body {
    catch {ns_writer list -foo} errorMsg
    set _ $errorMsg
} -match exact -result {wrong # args: should be "ns_writer list ?-server server?"}

test ns_writer-1.4 {basic operation} -body {
    catch {ns_writer list -server test foo} errorMsg
    set _ $errorMsg
} -match exact -result {wrong # args: should be "ns_writer list ?-server server?"}

test ns_writer-2.1 {basic operation} -body {
    expr {[ns_writer list] eq ""}
} -match exact -result 1

test ns_writer-2.2 {basic operation} -body {
    expr {[ns_writer list -server test] eq ""}
} -match exact -result 1

test ns_writer-2.3 {basic operation} -body {
    catch {expr {[ns_writer list -server foo] eq ""}} errorMsg
    set _ $errorMsg
} -match exact -result {invalid server: 'foo'}


#
# ns_writer size
#  - with and without connection
#  - with and without "-driver" argument
#
test ns_writer-3.1.0 {basic operation} -body {
    ns_writer size
} -returnCodes error -match exact -result {no connection}

test ns_writer-3.1.1 {basic operation} -body {
    ns_writer size -driver nssock
} -returnCodes {ok error} -match exact -result {1026}

test ns_writer-3.1.2 {basic operation} -constraints serverListen -setup {
    ns_register_proc GET /foo {
        ns_return 200 text/plain [ns_writer size]
    }
} -body {
    nstest::http -getbody 1 GET /foo
} -cleanup {
    ns_unregister_op GET /foo
} -returnCodes {error ok} -match exact -result {200 1026}


#
# ns_writer streaming
#  - with and without connection
#  - with and without "-driver" argument
#
test ns_writer-3.2.0 {basic operation} -body {
    ns_writer streaming
} -returnCodes error -match exact -result {no connection}

test ns_writer-3.2.1 {basic operation} -body {
    ns_writer streaming -driver nssock
} -returnCodes {ok error} -match exact -result {0}

test ns_writer-3.2.2 {basic operation} -constraints serverListen -setup {
    ns_register_proc GET /foo {
        ns_return 200 text/plain [ns_writer streaming]
    }
} -body {
    nstest::http -getbody 1 GET /foo
} -cleanup {
    ns_unregister_op GET /foo
} -returnCodes {error ok} -match exact -result {200 0}


cleanupTests

# Local variables:
#    mode: tcl
#    tcl-indent-level: 4
#    indent-tabs-mode: nil
# End:
